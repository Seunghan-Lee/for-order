{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo'; // 수정\n\nimport { ApolloClient } from 'apollo-client'; // 수정\n\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport Header from './components/Header';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      httpLink: '',\n      client: []\n    };\n  }\n\n  getURI() {\n    const httpLink = createHttpLink({\n      // 수정\n      uri: 'http://fororder.local/graphql' // 수정\n\n    });\n    const client = new ApolloClient({\n      link: httpLink,\n      // 수정\n      cache: new InMemoryCache() // 수정\n\n    });\n    this.setState({\n      client,\n      httpLink,\n      isLoading: false\n    });\n  }\n\n  componentDidMount() {\n    this.getURI();\n  } // const httpLink = createHttpLink({                       // 수정\n  //   uri: 'http://fororder.local/graphql'                          // 수정\n  // })                                                      // 수정\n\n\n  render() {\n    const {\n      client,\n      httpLink,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js"],"names":["React","ReactDOM","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","Header","App","Component","state","isLoading","httpLink","client","getURI","uri","link","cache","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,cAAT,QAA+B,cAA/B,C,CAAwD;;AACxD,SAASC,YAAT,QAA6B,eAA7B,C,CAAwD;;AACxD,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAFwB;AAAA;;AAQhCC,EAAAA,MAAM,GAAG;AACP,UAAMF,QAAQ,GAAGP,cAAc,CAAC;AAAwB;AACtDU,MAAAA,GAAG,EAAE,+BADyB,CACgC;;AADhC,KAAD,CAA/B;AAIA,UAAMF,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC9BY,MAAAA,IAAI,EAAEJ,QADwB;AACwB;AACtDK,MAAAA,KAAK,EAAE,IAAIX,aAAJ,EAFuB,CAEwB;;AAFxB,KAAjB,CAAf;AAKA,SAAKY,QAAL,CAAc;AAAEL,MAAAA,MAAF;AAAUD,MAAAA,QAAV;AAAoBD,MAAAA,SAAS,EAAE;AAA/B,KAAd;AACD;;AAEDQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,MAAL;AACD,GAvB+B,CAyBhC;AACA;AACA;;;AAGAM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,MAAF;AAAUD,MAAAA,QAAV;AAAoBD,MAAAA;AAApB,QAAkC,KAAKD,KAA7C;AACA,wBACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEG,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAvC+B;;AA0ClC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ApolloProvider } from 'react-apollo'           // 수정\nimport { ApolloClient } from 'apollo-client'            // 수정\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nimport Header from './components/Header';\n\nclass App extends React.Component {\n\n  state = {\n    isLoading: true,\n    httpLink: '',\n    client: []\n  };\n\n  getURI() {\n    const httpLink = createHttpLink({                       // 수정\n      uri: 'http://fororder.local/graphql'                          // 수정\n    })\n\n    const client = new ApolloClient({\n      link: httpLink,                                       // 수정\n      cache: new InMemoryCache()                            // 수정\n    })\n\n    this.setState({ client, httpLink, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getURI();\n  }\n\n  // const httpLink = createHttpLink({                       // 수정\n  //   uri: 'http://fororder.local/graphql'                          // 수정\n  // })                                                      // 수정\n \n\n  render() {\n    const { client, httpLink, isLoading } = this.state;\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"container\">\n          <Header />\n        </div>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}