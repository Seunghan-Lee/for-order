{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/components/Dessert.js\";\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nfunction GetDessert(props) {\n  let listId = 'dessertitem' + props.Id;\n  let Classes = 'dessertitem_' + props.ClassName;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: props.Id,\n    id: listId,\n    className: Classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, props.CatName), /*#__PURE__*/React.createElement(\"a\", {\n    href: props.Link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: props.FeaturedImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, props.Title)));\n}\n\nfunction Post_Dessert() {\n  const dessertQuery = gql`\n    {\n        gql_desserts {\n            nodes {\n              title\n              featuredImage {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                    width\n                    height\n                  }\n              }\n              link\n              slug\n              gql_dessert_categories {\n                  nodes {\n                    name\n                  }\n              }\n              gql_dessert_tags {\n                  nodes {\n                    name\n                  }\n              }\n              contentType {\n                  node {\n                  name\n                  }\n              }\n              gql_dessertId\n              acf_dessert_gal {\n                  pdGalImg {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                      width\n                      height\n                  }\n                  }\n              }\n            }\n        }\n          \n    }\n  `;\n  return /*#__PURE__*/React.createElement(Query, {\n    query: dessertQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, \"...\"); // 수정\n\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 27\n      }\n    }, \"Error\"); // 수정\n\n    const dessertRender = data.gql_desserts.nodes;\n    console.log(dessertRender[0].gql_dessert_categories.nodes[0].name);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, dessertRender.map((PostMeta, i) => /*#__PURE__*/React.createElement(GetDessert, {\n      key: PostMeta.gql_dessertId,\n      Id: PostMeta.gql_dessertId,\n      Link: PostMeta.link,\n      Title: PostMeta.title,\n      ClassName: PostMeta.gql_dessertId,\n      CatName: PostMeta.gql_dessert_categories.nodes[i].name,\n      FeaturedImage: PostMeta.featuredImage.sourceUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 51\n      }\n    }))));\n  });\n}\n\nfunction Dessert() {\n  return /*#__PURE__*/React.createElement(Post_Dessert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default Dessert;","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/components/Dessert.js"],"names":["React","gql","Query","GetDessert","props","listId","Id","Classes","ClassName","CatName","Link","FeaturedImage","Title","Post_Dessert","dessertQuery","loading","error","data","dessertRender","gql_desserts","nodes","console","log","gql_dessert_categories","name","map","PostMeta","i","gql_dessertId","link","title","featuredImage","sourceUrl","Dessert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,MAAM,GAAG,gBAAgBD,KAAK,CAACE,EAAnC;AACA,MAAIC,OAAO,GAAG,iBAAiBH,KAAK,CAACI,SAArC;AAEA,sBACE;AAAI,IAAA,GAAG,EAAEJ,KAAK,CAACE,EAAf;AAAmB,IAAA,EAAE,EAAED,MAAvB;AAA+B,IAAA,SAAS,EAAEE,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,KAAK,CAACK,OAAZ,CADF,eAEE;AAAG,IAAA,IAAI,EAAEL,KAAK,CAACM,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEN,KAAK,CAACO,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACQ,KAAX,CAFF,CAFF,CADF;AASD;;AAED,SAASC,YAAT,GAAwB;AACtB,QAAMC,YAAY,GAAGb,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAzB;AA+CA,sBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEa,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7B,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP,CADgB,CACQ;;AACrC,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP,CAFkB,CAEa;;AAE1C,UAAME,aAAa,GAAGD,IAAI,CAACE,YAAL,CAAkBC,KAAxC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAAC,CAAD,CAAb,CAAiBK,sBAAjB,CAAwCH,KAAxC,CAA8C,CAA9C,EAAiDI,IAA7D;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,aAAa,CAACO,GAAd,CAAkB,CAACC,QAAD,EAAWC,CAAX,kBAAiB,oBAAC,UAAD;AAEpC,MAAA,GAAG,EAAED,QAAQ,CAACE,aAFsB;AAGpC,MAAA,EAAE,EAAEF,QAAQ,CAACE,aAHuB;AAIpC,MAAA,IAAI,EAAEF,QAAQ,CAACG,IAJqB;AAKpC,MAAA,KAAK,EAAGH,QAAQ,CAACI,KALmB;AAMpC,MAAA,SAAS,EAAEJ,QAAQ,CAACE,aANgB;AAOpC,MAAA,OAAO,EAAEF,QAAQ,CAACH,sBAAT,CAAgCH,KAAhC,CAAsCO,CAAtC,EAAyCH,IAPd;AAQpC,MAAA,aAAa,EAAEE,QAAQ,CAACK,aAAT,CAAuBC,SARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,CADH,CADF,CADF;AAkBD,GA3BH,CADF;AA+BD;;AAED,SAASC,OAAT,GAAmB;AACjB,sBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nfunction GetDessert(props) {\n  let listId = 'dessertitem' + props.Id;\n  let Classes = 'dessertitem_' + props.ClassName;\n\n  return (\n    <li key={props.Id} id={listId} className={Classes}>\n      <div>{props.CatName}</div>\n      <a href={props.Link}>\n        <img src={props.FeaturedImage}></img>\n        <h3>{props.Title}</h3>\n      </a>\n    </li>\n  )\n}\n\nfunction Post_Dessert() {\n  const dessertQuery = gql`\n    {\n        gql_desserts {\n            nodes {\n              title\n              featuredImage {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                    width\n                    height\n                  }\n              }\n              link\n              slug\n              gql_dessert_categories {\n                  nodes {\n                    name\n                  }\n              }\n              gql_dessert_tags {\n                  nodes {\n                    name\n                  }\n              }\n              contentType {\n                  node {\n                  name\n                  }\n              }\n              gql_dessertId\n              acf_dessert_gal {\n                  pdGalImg {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                      width\n                      height\n                  }\n                  }\n              }\n            }\n        }\n          \n    }\n  `\n\n  return (\n    <Query query={dessertQuery}>\n      {({ loading, error, data }) => {\n        if (loading) return <div>...</div>   // 수정\n        if (error) return <div>Error</div>        // 수정\n\n        const dessertRender = data.gql_desserts.nodes;\n        \n        console.log(dessertRender[0].gql_dessert_categories.nodes[0].name);\n\n        return (\n          <div>\n            <ul>\n              {dessertRender.map((PostMeta, i) => <GetDessert \n\n              key={PostMeta.gql_dessertId} \n              Id={PostMeta.gql_dessertId} \n              Link={PostMeta.link} \n              Title ={PostMeta.title}\n              ClassName={PostMeta.gql_dessertId} \n              CatName={PostMeta.gql_dessert_categories.nodes[i].name} \n              FeaturedImage={PostMeta.featuredImage.sourceUrl} \n\n              />)}\n            </ul>\n          </div>\n\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction Dessert() {\n  return <Post_Dessert />\n}\n\nexport default Dessert;\n"]},"metadata":{},"sourceType":"module"}