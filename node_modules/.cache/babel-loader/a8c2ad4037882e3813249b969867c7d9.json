{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; // import { ApolloProvider } from 'react-apollo'\n// import { ApolloClient } from 'apollo-client' \n// import { createHttpLink } from 'apollo-link-http'\n// import { InMemoryCache } from 'apollo-cache-inmemory'\n// const httpLink = createHttpLink({\n//   uri: 'http://fororder.local/graphql'   \n// })                               \n// const client = new ApolloClient({\n//   link: httpLink,                \n//   cache: new InMemoryCache()     \n// })\n// ReactDOM.render(\n//   <ApolloProvider client={client}>\n//     <App />\n//   </ApolloProvider>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B,C,CAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAF,QAAQ,CAACG,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AAEAH,aAAa,CAACI,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// import { ApolloProvider } from 'react-apollo'\n// import { ApolloClient } from 'apollo-client' \n// import { createHttpLink } from 'apollo-link-http'\n// import { InMemoryCache } from 'apollo-cache-inmemory'\n\n// const httpLink = createHttpLink({\n//   uri: 'http://fororder.local/graphql'   \n// })                               \n// const client = new ApolloClient({\n//   link: httpLink,                \n//   cache: new InMemoryCache()     \n// })\n\n// ReactDOM.render(\n//   <ApolloProvider client={client}>\n//     <App />\n//   </ApolloProvider>,\n//   document.getElementById('root')\n// );\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();"]},"metadata":{},"sourceType":"module"}