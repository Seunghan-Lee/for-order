{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js\";\nimport React from 'react';\nimport { request } from 'graphql-request';\nimport './App.css';\nconst endpoint = 'http://fororder.local/graphql';\nfetch(endpoint, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    query: `{\n                menuItems(where: {location: PRIMARY}) {\n                    nodes {\n                    menuItemId\n                    url\n                    cssClasses\n                    label\n                    target\n                    }\n                }\n            }`\n  })\n}).then(res => res.json()).then(function (response) {\n  const menuAll = response;\n  console.log(menuAll);\n}).catch(error => console.error('Error:', error));\n\nfunction menus(menuAll) {\n  console.log(menuAll);\n  var innerHtml = '';\n  var menuData = menuAll.data['menuItems'].nodes;\n\n  for (var i = 0; i < menuData.length; i++) {\n    var menuItemId = menuData[i].menuItemId;\n    var menuUrl = menuData[i].url;\n    var menuClass = menuData[i].cssClasses;\n    var menuLabel = menuData[i].label;\n    var menuTarget = menuData[i].target;\n\n    if (!menuTarget) {\n      var menuTarget = '_self';\n    }\n\n    innerHtml = innerHtml + `\n          <li id=\"menuid_${menuItemId}\" class=\"menuitem ${menuClass}\">\n              <a href=\"${menuUrl}\" target=\"${menuTarget}\">\n                  <span>${menuLabel}</span>\n              </a>\n          </li>\n      `;\n  }\n\n  return '<ul>' + innerHtml + '</ul>';\n}\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, menus);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js"],"names":["React","request","endpoint","fetch","method","headers","body","JSON","stringify","query","then","res","json","response","menuAll","console","log","catch","error","menus","innerHtml","menuData","data","nodes","i","length","menuItemId","menuUrl","url","menuClass","cssClasses","menuLabel","label","menuTarget","target","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAO,WAAP;AAEA,MAAMC,QAAQ,GAAG,+BAAjB;AACAC,KAAK,CACDD,QADC,EAED;AACIE,EAAAA,MAAM,EAAE,MADZ;AAEIC,EAAAA,OAAO,EAAE;AAAE,oBAAgB;AAAlB,GAFb;AAGIC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBC,IAAAA,KAAK,EAAG;;;;;;;;;;;AADS,GAAf;AAHV,CAFC,CAAL,CAoBCC,IApBD,CAoBMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EApBb,EAqBCF,IArBD,CAqBM,UAASG,QAAT,EAAmB;AACvB,QAAMC,OAAO,GAAGD,QAAhB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,CAxBD,EAyBCG,KAzBD,CAyBOC,KAAK,IAAIH,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB,CAzBhB;;AA2BA,SAASC,KAAT,CAAeL,OAAf,EAAuB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,MAAIM,SAAS,GAAG,EAAhB;AACA,MAAIC,QAAQ,GAAGP,OAAO,CAACQ,IAAR,CAAa,WAAb,EAA0BC,KAAzC;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,QAAIE,UAAU,GAAGL,QAAQ,CAACG,CAAD,CAAR,CAAYE,UAA7B;AACA,QAAIC,OAAO,GAAGN,QAAQ,CAACG,CAAD,CAAR,CAAYI,GAA1B;AACA,QAAIC,SAAS,GAAGR,QAAQ,CAACG,CAAD,CAAR,CAAYM,UAA5B;AACA,QAAIC,SAAS,GAAGV,QAAQ,CAACG,CAAD,CAAR,CAAYQ,KAA5B;AACA,QAAIC,UAAU,GAAGZ,QAAQ,CAACG,CAAD,CAAR,CAAYU,MAA7B;;AAEA,QAAG,CAACD,UAAJ,EAAgB;AACZ,UAAIA,UAAU,GAAG,OAAjB;AACH;;AAEDb,IAAAA,SAAS,GAAGA,SAAS,GAAE;2BACFM,UAAW,qBAAoBG,SAAU;yBAC3CF,OAAQ,aAAYM,UAAW;0BAC9BF,SAAU;;;OAH9B;AAOH;;AACD,SAAO,SAAOX,SAAP,GAAiB,OAAxB;AACD;;AAED,SAASe,GAAT,GAAe;AACb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,KADH,CADF;AAKD;;AAED,eAAegB,GAAf","sourcesContent":["import React from 'react';\nimport { request } from 'graphql-request'\nimport './App.css';\n\nconst endpoint = 'http://fororder.local/graphql'\nfetch(\n    endpoint,\n    {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n            query: `{\n                menuItems(where: {location: PRIMARY}) {\n                    nodes {\n                    menuItemId\n                    url\n                    cssClasses\n                    label\n                    target\n                    }\n                }\n            }`\n        }),\n    }\n)\n.then(res => res.json())\n.then(function(response) {\n  const menuAll = response;\n  console.log(menuAll);\n})\n.catch(error => console.error('Error:', error));\n\nfunction menus(menuAll){\n  console.log(menuAll);\n  var innerHtml = '';\n  var menuData = menuAll.data['menuItems'].nodes;\n\n  for (var i = 0; i < menuData.length; i++) {\n      var menuItemId = menuData[i].menuItemId;\n      var menuUrl = menuData[i].url;\n      var menuClass = menuData[i].cssClasses;\n      var menuLabel = menuData[i].label;\n      var menuTarget = menuData[i].target;\n      \n      if(!menuTarget) {\n          var menuTarget = '_self';\n      }\n\n      innerHtml = innerHtml+`\n          <li id=\"menuid_${menuItemId}\" class=\"menuitem ${menuClass}\">\n              <a href=\"${menuUrl}\" target=\"${menuTarget}\">\n                  <span>${menuLabel}</span>\n              </a>\n          </li>\n      `\n  }\n  return '<ul>'+innerHtml+'</ul>';\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {menus}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}