{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo'; // 수정\n\nimport { ApolloClient } from 'apollo-client'; // 수정\n\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport Header from './components/Header';\nconst httpLink = createHttpLink({\n  uri: 'http://fororder.local/graphql'\n});\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: true,\n      httpLink: '',\n      client: []\n    };\n  }\n\n  // getURI() {\n  //   const httpLink = createHttpLink({\n  //     uri: 'http://fororder.local/graphql'   \n  //   })\n  //   const client = new ApolloClient({\n  //     link: httpLink,                \n  //     cache: new InMemoryCache()   \n  //   })\n  //   this.setState({ client, httpLink, isLoading: false });\n  // };\n  // componentDidMount() {\n  //   this.getURI();\n  // }\n  // const httpLink = createHttpLink({\n  //   uri: 'http://fororder.local/graphql'   \n  // })                               \n  render() {\n    const {\n      client,\n      httpLink,\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js"],"names":["React","ReactDOM","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","Header","httpLink","uri","client","link","cache","App","Component","state","isLoading","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,SAASC,cAAT,QAA+B,cAA/B,C,CAAwD;;AACxD,SAASC,YAAT,QAA6B,eAA7B,C,CAAwD;;AACxD,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,MAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,MAAM,GAAG,IAAIN,YAAJ,CAAiB;AAC9BO,EAAAA,IAAI,EAAEH,QADwB;AAE9BI,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,MAAMO,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACNC,MAAAA,SAAS,EAAE,IADL;AAENR,MAAAA,QAAQ,EAAE,EAFJ;AAGNE,MAAAA,MAAM,EAAE;AAHF,KAFwB;AAAA;;AAQhC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGAO,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,MAAF;AAAUF,MAAAA,QAAV;AAAoBQ,MAAAA;AAApB,QAAkC,KAAKD,KAA7C;AACA,wBACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAOD;;AAvC+B;;AA0ClC,eAAeG,GAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { ApolloProvider } from 'react-apollo'           // 수정\nimport { ApolloClient } from 'apollo-client'            // 수정\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nimport Header from './components/Header';\n\nconst httpLink = createHttpLink({\n  uri: 'http://fororder.local/graphql'   \n})\n\nconst client = new ApolloClient({\n  link: httpLink,                \n  cache: new InMemoryCache()   \n})\n\nclass App extends React.Component {\n\n  state = {\n    isLoading: true,\n    httpLink: '',\n    client: []\n  };\n\n  // getURI() {\n  //   const httpLink = createHttpLink({\n  //     uri: 'http://fororder.local/graphql'   \n  //   })\n\n  //   const client = new ApolloClient({\n  //     link: httpLink,                \n  //     cache: new InMemoryCache()   \n  //   })\n\n  //   this.setState({ client, httpLink, isLoading: false });\n  // };\n\n  // componentDidMount() {\n  //   this.getURI();\n  // }\n\n  // const httpLink = createHttpLink({\n  //   uri: 'http://fororder.local/graphql'   \n  // })                               \n\n\n  render() {\n    const { client, httpLink, isLoading } = this.state;\n    return (\n      <ApolloProvider client={client}>\n        <div className=\"container\">\n          <Header />\n        </div>\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}