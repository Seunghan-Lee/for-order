{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/components/Dessert.js\";\nimport React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nfunction GetDessert(props) {\n  let listId = 'menuitem' + props.Id;\n  let Classes = 'menuitem ' + props.ClassName;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    key: props.Id,\n    id: listId,\n    className: Classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: props.Link,\n    target: props.Target,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, props.Label)));\n}\n\nfunction Post_Dessert() {\n  const dessertQuery = gql`\n    {\n        gql_desserts {\n            nodes {\n              title\n              featuredImage {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                    width\n                    height\n                  }\n              }\n              link\n              slug\n              gql_dessert_categories {\n                  nodes {\n                  name\n                  }\n              }\n              gql_dessert_tags {\n                  nodes {\n                  name\n                  }\n              }\n              contentType {\n                  node {\n                  name\n                  }\n              }\n              gql_dessertId\n              acf_dessert_gal {\n                  pdGalImg {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                      width\n                      height\n                  }\n                  }\n              }\n            }\n        }\n          \n    }\n  `;\n  return /*#__PURE__*/React.createElement(Query, {\n    query: dessertQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"...\"); // 수정\n\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }, \"Error\"); // 수정\n\n    const dessertRender = data.gql_desserts.nodes;\n    const ImgRender = data.gql_desserts.nodes.featuredImage;\n    const galRender = data.gql_desserts.nodes.acf_dessert_gal;\n    console.log(dessertRender);\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, dessertRender.map(PostMeta => /*#__PURE__*/React.createElement(GetDessert, {\n      key: PostMeta.gql_dessertId,\n      Id: PostMeta.gql_dessertId,\n      Link: PostMeta.link,\n      ClassName: PostMeta.gql_dessertId,\n      Label: PostMeta.gql_dessert_categories.name,\n      Target: PostMeta.target,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 46\n      }\n    }))));\n  });\n}\n\nfunction Dessert() {\n  return /*#__PURE__*/React.createElement(Post_Dessert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default Dessert;","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/components/Dessert.js"],"names":["React","gql","Query","GetDessert","props","listId","Id","Classes","ClassName","Link","Target","Label","Post_Dessert","dessertQuery","loading","error","data","dessertRender","gql_desserts","nodes","ImgRender","featuredImage","galRender","acf_dessert_gal","console","log","map","PostMeta","gql_dessertId","link","gql_dessert_categories","name","target","Dessert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIC,MAAM,GAAG,aAAaD,KAAK,CAACE,EAAhC;AACA,MAAIC,OAAO,GAAG,cAAcH,KAAK,CAACI,SAAlC;AAEA,sBACE;AAAI,IAAA,GAAG,EAAEJ,KAAK,CAACE,EAAf;AAAmB,IAAA,EAAE,EAAED,MAAvB;AAA+B,IAAA,SAAS,EAAEE,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAEH,KAAK,CAACK,IAAf;AAAqB,IAAA,MAAM,EAAEL,KAAK,CAACM,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAON,KAAK,CAACO,KAAb,CADF,CADF,CADF;AAOD;;AAED,SAASC,YAAT,GAAwB;AACtB,QAAMC,YAAY,GAAGZ,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAzB;AA+CA,sBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEY,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7B,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP,CADgB,CACQ;;AACrC,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP,CAFkB,CAEa;;AAE1C,UAAME,aAAa,GAAGD,IAAI,CAACE,YAAL,CAAkBC,KAAxC;AACA,UAAMC,SAAS,GAAGJ,IAAI,CAACE,YAAL,CAAkBC,KAAlB,CAAwBE,aAA1C;AACA,UAAMC,SAAS,GAAGN,IAAI,CAACE,YAAL,CAAkBC,KAAlB,CAAwBI,eAA1C;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,aAAZ;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,aAAa,CAACS,GAAd,CAAkBC,QAAQ,iBAAI,oBAAC,UAAD;AAE/B,MAAA,GAAG,EAAEA,QAAQ,CAACC,aAFiB;AAG/B,MAAA,EAAE,EAAED,QAAQ,CAACC,aAHkB;AAI/B,MAAA,IAAI,EAAED,QAAQ,CAACE,IAJgB;AAK/B,MAAA,SAAS,EAAEF,QAAQ,CAACC,aALW;AAM/B,MAAA,KAAK,EAAED,QAAQ,CAACG,sBAAT,CAAgCC,IANR;AAO/B,MAAA,MAAM,EAAEJ,QAAQ,CAACK,MAPc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,CADH,CADF,CADF;AAiBD,GA3BH,CADF;AA+BD;;AAED,SAASC,OAAT,GAAmB;AACjB,sBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\n\nfunction GetDessert(props) {\n  let listId = 'menuitem' + props.Id;\n  let Classes = 'menuitem ' + props.ClassName;\n\n  return (\n    <li key={props.Id} id={listId} className={Classes}>\n      <a href={props.Link} target={props.Target}>\n        <span>{props.Label}</span>\n      </a>\n    </li>\n  )\n}\n\nfunction Post_Dessert() {\n  const dessertQuery = gql`\n    {\n        gql_desserts {\n            nodes {\n              title\n              featuredImage {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                    width\n                    height\n                  }\n              }\n              link\n              slug\n              gql_dessert_categories {\n                  nodes {\n                  name\n                  }\n              }\n              gql_dessert_tags {\n                  nodes {\n                  name\n                  }\n              }\n              contentType {\n                  node {\n                  name\n                  }\n              }\n              gql_dessertId\n              acf_dessert_gal {\n                  pdGalImg {\n                  altText\n                  sourceUrl\n                  mediaDetails {\n                      width\n                      height\n                  }\n                  }\n              }\n            }\n        }\n          \n    }\n  `\n\n  return (\n    <Query query={dessertQuery}>\n      {({ loading, error, data }) => {\n        if (loading) return <div>...</div>   // 수정\n        if (error) return <div>Error</div>        // 수정\n\n        const dessertRender = data.gql_desserts.nodes;\n        const ImgRender = data.gql_desserts.nodes.featuredImage;\n        const galRender = data.gql_desserts.nodes.acf_dessert_gal;\n        console.log(dessertRender);\n\n        return (\n          <nav>\n            <ul>\n              {dessertRender.map(PostMeta => <GetDessert \n              \n              key={PostMeta.gql_dessertId} \n              Id={PostMeta.gql_dessertId} \n              Link={PostMeta.link} \n              ClassName={PostMeta.gql_dessertId} \n              Label={PostMeta.gql_dessert_categories.name} \n              Target={PostMeta.target} \n\n              />)}\n            </ul>\n          </nav>\n\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction Dessert() {\n  return <Post_Dessert />\n}\n\nexport default Dessert;\n"]},"metadata":{},"sourceType":"module"}