{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js\";\nimport React from 'react';\nimport Header from './components/Header';\nimport { ApolloProvider } from 'react-apollo'; // 수정\n\nimport { ApolloClient } from 'apollo-client'; // 수정\n\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nconst httpLink = createHttpLink({\n  uri: 'http://fororder.local/graphql'\n});\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n});\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoading: false // httpLink = createHttpLink({\n      //   uri: 'http://fororder.local/graphql'   \n      // }),\n      // client = new ApolloClient({\n      //   link: httpLink,                \n      //   cache: new InMemoryCache()   \n      // })\n\n    };\n  }\n\n  // getURI() {\n  //   const httpLink = createHttpLink({\n  //     uri: 'http://fororder.local/graphql'   \n  //   })\n  //   const client = new ApolloClient({\n  //     link: httpLink,                \n  //     cache: new InMemoryCache()   \n  //   })\n  //   this.setState({ client, httpLink, isLoading: false });\n  // };\n  // componentDidMount() {\n  //   this.getURI();\n  // }\n  // const httpLink = createHttpLink({\n  //   uri: 'http://fororder.local/graphql'   \n  // })                               \n  render() {\n    const {\n      isLoading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"loader__text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js"],"names":["React","Header","ApolloProvider","ApolloClient","createHttpLink","InMemoryCache","httpLink","uri","client","link","cache","App","Component","state","isLoading","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,SAASC,cAAT,QAA+B,cAA/B,C,CAAwD;;AACxD,SAASC,YAAT,QAA6B,eAA7B,C,CAAwD;;AACxD,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,MAAMC,QAAQ,GAAGF,cAAc,CAAC;AAC9BG,EAAAA,GAAG,EAAE;AADyB,CAAD,CAA/B;AAIA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,IAAI,EAAEH,QADwB;AAE9BI,EAAAA,KAAK,EAAE,IAAIL,aAAJ;AAFuB,CAAjB,CAAf;;AAKA,MAAMM,GAAN,SAAkBX,KAAK,CAACY,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AACNC,MAAAA,SAAS,EAAE,KADL,CAEN;AACA;AACA;AACA;AACA;AACA;AACA;;AARM,KAFsB;AAAA;;AAahC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAED,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCM,SAAS,gBACR;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADQ,gBAKN;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANJ,CADF;AAcD;;AAnD+B;;AAsDlC,eAAeH,GAAf","sourcesContent":["import React from 'react';\nimport Header from './components/Header';\n\nimport { ApolloProvider } from 'react-apollo'           // 수정\nimport { ApolloClient } from 'apollo-client'            // 수정\nimport { createHttpLink } from 'apollo-link-http'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\n\nconst httpLink = createHttpLink({\n  uri: 'http://fororder.local/graphql'   \n})\n\nconst client = new ApolloClient({\n  link: httpLink,                \n  cache: new InMemoryCache()   \n})\n\nclass App extends React.Component {\n\n    state = {\n      isLoading: false\n      // httpLink = createHttpLink({\n      //   uri: 'http://fororder.local/graphql'   \n      // }),\n      // client = new ApolloClient({\n      //   link: httpLink,                \n      //   cache: new InMemoryCache()   \n      // })\n    };\n\n  // getURI() {\n  //   const httpLink = createHttpLink({\n  //     uri: 'http://fororder.local/graphql'   \n  //   })\n\n  //   const client = new ApolloClient({\n  //     link: httpLink,                \n  //     cache: new InMemoryCache()   \n  //   })\n\n  //   this.setState({ client, httpLink, isLoading: false });\n  // };\n\n  // componentDidMount() {\n  //   this.getURI();\n  // }\n\n  // const httpLink = createHttpLink({\n  //   uri: 'http://fororder.local/graphql'   \n  // })                               \n\n\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <ApolloProvider client={client}>\n      {isLoading ? (\n        <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"container\">\n            <Header />\n          </div>\n        )\n      }\n      </ApolloProvider>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}