{"ast":null,"code":"var _jsxFileName = \"/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js\";\nimport React from 'react';\nimport { request } from 'graphql-request';\nimport { gql } from 'apollo-boost';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Query } from 'react-apollo';\nimport './App.css';\n\nfunction MenuList() {\n  const menuQuery = gql`\n    {\n      menuItems(where: {location: PRIMARY}) {\n        nodes {\n          menuItemId\n          url\n          cssClasses\n          label\n          target\n        }\n      }\n    }\n  `;\n  return /*#__PURE__*/React.createElement(Query, {\n    query: menuQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    console.log(data); // 수정\n\n    if (loading) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 31\n      }\n    }, \"Fetching\"); // 수정\n\n    if (error) return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 29\n      }\n    }, \"Error\"); // 수정\n\n    const linksToRender = data.menuItems.nodes; // 수정\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, linksToRender.map(link => /*#__PURE__*/React.createElement(GetMenus, {\n      key: link.menuItemId,\n      link: link.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 42\n      }\n    })));\n  });\n} // const menuAll = gql`\n//   {\n//     menuItems(where: {location: PRIMARY}) {\n//         nodes {\n//         menuItemId\n//         url\n//         cssClasses\n//         label\n//         target\n//         }\n//     }\n//   }\n//     `;\n\n\nfunction getMenus(menuAll) {\n  var innerHtml = '';\n  var menuData = menuAll.data['menuItems'].nodes;\n\n  for (var i = 0; i < menuData.length; i++) {\n    var menuItemId = menuData[i].menuItemId;\n    var menuUrl = menuData[i].url;\n    var menuClass = menuData[i].cssClasses;\n    var menuLabel = menuData[i].label;\n    var menuTarget = menuData[i].target;\n\n    if (!menuTarget) {\n      var menuTarget = '_self';\n    }\n\n    innerHtml = innerHtml + `\n          <li id=\"menuid_${menuItemId}\" class=\"menuitem ${menuClass}\">\n              <a href=\"${menuUrl}\" target=\"${menuTarget}\">\n                  <span>${menuLabel}</span>\n              </a>\n          </li>\n      `;\n  }\n\n  return '<ul>' + innerHtml + '</ul>';\n} // function Navigate({Id, Url, Class, Label, Target }) {\n//   let _menuItemID = 'menuid_'+ Id;\n//   let _menuUrl = Url;\n//   let _menuClass = Class;\n//   let _menuLabel = Label;\n//   let _menuTarget = Target;\n//   return (\n//     <li id={_menuItemID} className={_menuClass}>\n//       <a href={_menuUrl} target={_menuTarget}>\n//         <span>{_menuLabel}</span>\n//       </a>\n//     </li>\n//   )\n// }\n\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(MenuList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/peter/02_Wisdom/09_helloWorld/06-ReactJs/for-order/src/App.js"],"names":["React","request","gql","ApolloClient","ApolloProvider","Query","MenuList","menuQuery","loading","error","data","console","log","linksToRender","menuItems","nodes","map","link","menuItemId","url","getMenus","menuAll","innerHtml","menuData","i","length","menuUrl","menuClass","cssClasses","menuLabel","label","menuTarget","target","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAO,WAAP;;AAGA,SAASC,QAAT,GAAoB;AAClB,QAAMC,SAAS,GAAGL,GAAI;;;;;;;;;;;;GAAtB;AAcA,sBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEK,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,GAAD,KAA8B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD6B,CACD;;AAC5B,QAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CAFgB,CAEa;;AAC1C,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP,CAHkB,CAGa;;AAE1C,UAAMI,aAAa,GAAGH,IAAI,CAACI,SAAL,CAAeC,KAArC,CAL6B,CAKkB;;AAE/C,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,aAAa,CAACG,GAAd,CAAkBC,IAAI,iBAAI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACC,UAApB;AAAgC,MAAA,IAAI,EAAED,IAAI,CAACE,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B,CADH,CADF;AAKD,GAbL,CADF;AAiBD,C,CAID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACzB,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,QAAQ,GAAGF,OAAO,CAACX,IAAR,CAAa,WAAb,EAA0BK,KAAzC;;AAEA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,QAAQ,CAACE,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAIN,UAAU,GAAGK,QAAQ,CAACC,CAAD,CAAR,CAAYN,UAA7B;AACA,QAAIQ,OAAO,GAAGH,QAAQ,CAACC,CAAD,CAAR,CAAYL,GAA1B;AACA,QAAIQ,SAAS,GAAGJ,QAAQ,CAACC,CAAD,CAAR,CAAYI,UAA5B;AACA,QAAIC,SAAS,GAAGN,QAAQ,CAACC,CAAD,CAAR,CAAYM,KAA5B;AACA,QAAIC,UAAU,GAAGR,QAAQ,CAACC,CAAD,CAAR,CAAYQ,MAA7B;;AAEA,QAAI,CAACD,UAAL,EAAiB;AACf,UAAIA,UAAU,GAAG,OAAjB;AACD;;AAEDT,IAAAA,SAAS,GAAGA,SAAS,GAAI;2BACFJ,UAAW,qBAAoBS,SAAU;yBAC3CD,OAAQ,aAAYK,UAAW;0BAC9BF,SAAU;;;OAHhC;AAOD;;AACD,SAAO,SAASP,SAAT,GAAqB,OAA5B;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASW,GAAT,GAAe;AACb,sBAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { request } from 'graphql-request';\nimport { gql } from 'apollo-boost';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { Query } from 'react-apollo'\nimport './App.css';\n\n\nfunction MenuList() {\n  const menuQuery = gql`\n    {\n      menuItems(where: {location: PRIMARY}) {\n        nodes {\n          menuItemId\n          url\n          cssClasses\n          label\n          target\n        }\n      }\n    }\n  ` \n\n  return (\n    <Query query={menuQuery}>\n        {({ loading, error, data }) => {  \n          console.log(data);          // 수정\n          if (loading) return <div>Fetching</div>   // 수정\n          if (error) return <div>Error</div>        // 수정\n    \n          const linksToRender = data.menuItems.nodes     // 수정\n    \n          return (\n            <div>\n              {linksToRender.map(link => <GetMenus key={link.menuItemId} link={link.url} />)}\n            </div>\n          )\n        }}\n      </Query>\n  )\n}\n\n\n\n// const menuAll = gql`\n//   {\n//     menuItems(where: {location: PRIMARY}) {\n//         nodes {\n//         menuItemId\n//         url\n//         cssClasses\n//         label\n//         target\n//         }\n//     }\n//   }\n//     `;\n\n\nfunction getMenus(menuAll) {\n  var innerHtml = '';\n  var menuData = menuAll.data['menuItems'].nodes;\n\n  for (var i = 0; i < menuData.length; i++) {\n    var menuItemId = menuData[i].menuItemId;\n    var menuUrl = menuData[i].url;\n    var menuClass = menuData[i].cssClasses;\n    var menuLabel = menuData[i].label;\n    var menuTarget = menuData[i].target;\n\n    if (!menuTarget) {\n      var menuTarget = '_self';\n    }\n\n    innerHtml = innerHtml + `\n          <li id=\"menuid_${menuItemId}\" class=\"menuitem ${menuClass}\">\n              <a href=\"${menuUrl}\" target=\"${menuTarget}\">\n                  <span>${menuLabel}</span>\n              </a>\n          </li>\n      `\n  }\n  return '<ul>' + innerHtml + '</ul>';\n}\n\n// function Navigate({Id, Url, Class, Label, Target }) {\n//   let _menuItemID = 'menuid_'+ Id;\n//   let _menuUrl = Url;\n//   let _menuClass = Class;\n//   let _menuLabel = Label;\n//   let _menuTarget = Target;\n\n//   return (\n//     <li id={_menuItemID} className={_menuClass}>\n//       <a href={_menuUrl} target={_menuTarget}>\n//         <span>{_menuLabel}</span>\n//       </a>\n//     </li>\n//   )\n// }\n\nfunction App() {\n  return <MenuList />\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}